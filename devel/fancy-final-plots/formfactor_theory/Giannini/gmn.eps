%!PS-Adobe-2.0 EPSF-2.0
%%Title: gmn.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Fri Apr 11 11:34:51 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -83 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
1.000 UL
LTb
1025 500 M
63 0 V
5687 0 R
-63 0 V
 stroke
875 500 M
[ [(Helvetica) 250.0 0.0 true true (-2)]
] -83.3 MRshow
1025 885 M
63 0 V
5687 0 R
-63 0 V
 stroke
875 885 M
[ [(Helvetica) 250.0 0.0 true true (-1.8)]
] -83.3 MRshow
1025 1271 M
63 0 V
5687 0 R
-63 0 V
 stroke
875 1271 M
[ [(Helvetica) 250.0 0.0 true true (-1.6)]
] -83.3 MRshow
1025 1656 M
63 0 V
5687 0 R
-63 0 V
 stroke
875 1656 M
[ [(Helvetica) 250.0 0.0 true true (-1.4)]
] -83.3 MRshow
1025 2042 M
63 0 V
5687 0 R
-63 0 V
 stroke
875 2042 M
[ [(Helvetica) 250.0 0.0 true true (-1.2)]
] -83.3 MRshow
1025 2427 M
63 0 V
5687 0 R
-63 0 V
 stroke
875 2427 M
[ [(Helvetica) 250.0 0.0 true true (-1)]
] -83.3 MRshow
1025 2813 M
63 0 V
5687 0 R
-63 0 V
 stroke
875 2813 M
[ [(Helvetica) 250.0 0.0 true true (-0.8)]
] -83.3 MRshow
1025 3198 M
63 0 V
5687 0 R
-63 0 V
 stroke
875 3198 M
[ [(Helvetica) 250.0 0.0 true true (-0.6)]
] -83.3 MRshow
1025 3584 M
63 0 V
5687 0 R
-63 0 V
 stroke
875 3584 M
[ [(Helvetica) 250.0 0.0 true true (-0.4)]
] -83.3 MRshow
1025 3969 M
63 0 V
5687 0 R
-63 0 V
 stroke
875 3969 M
[ [(Helvetica) 250.0 0.0 true true (-0.2)]
] -83.3 MRshow
1025 4355 M
63 0 V
5687 0 R
-63 0 V
 stroke
875 4355 M
[ [(Helvetica) 250.0 0.0 true true ( 0)]
] -83.3 MRshow
1025 4740 M
63 0 V
5687 0 R
-63 0 V
 stroke
875 4740 M
[ [(Helvetica) 250.0 0.0 true true ( 0.2)]
] -83.3 MRshow
1025 500 M
0 63 V
0 4177 R
0 -63 V
 stroke
1025 250 M
[ [(Helvetica) 250.0 0.0 true true ( 0)]
] -83.3 MCshow
1983 500 M
0 63 V
0 4177 R
0 -63 V
 stroke
1983 250 M
[ [(Helvetica) 250.0 0.0 true true ( 1)]
] -83.3 MCshow
2942 500 M
0 63 V
0 4177 R
0 -63 V
 stroke
2942 250 M
[ [(Helvetica) 250.0 0.0 true true ( 2)]
] -83.3 MCshow
3900 500 M
0 63 V
0 4177 R
0 -63 V
 stroke
3900 250 M
[ [(Helvetica) 250.0 0.0 true true ( 3)]
] -83.3 MCshow
4858 500 M
0 63 V
0 4177 R
0 -63 V
 stroke
4858 250 M
[ [(Helvetica) 250.0 0.0 true true ( 4)]
] -83.3 MCshow
5817 500 M
0 63 V
0 4177 R
0 -63 V
 stroke
5817 250 M
[ [(Helvetica) 250.0 0.0 true true ( 5)]
] -83.3 MCshow
6775 500 M
0 63 V
0 4177 R
0 -63 V
 stroke
6775 250 M
[ [(Helvetica) 250.0 0.0 true true ( 6)]
] -83.3 MCshow
1.000 UL
LTb
1025 500 M
5750 0 V
0 4240 V
-5750 0 V
0 -4240 V
5.000 UL
LT0
1025 673 M
53 552 V
53 431 V
54 337 V
53 269 V
53 218 V
53 182 V
54 153 V
53 132 V
53 114 V
53 101 V
54 90 V
53 81 V
53 72 V
53 65 V
54 59 V
53 55 V
53 49 V
53 45 V
54 42 V
53 38 V
53 35 V
53 33 V
54 30 V
53 27 V
53 26 V
53 24 V
54 22 V
53 21 V
53 19 V
53 18 V
53 17 V
54 15 V
53 15 V
53 13 V
53 13 V
54 12 V
53 11 V
53 11 V
53 9 V
54 10 V
53 8 V
53 9 V
53 8 V
54 7 V
53 7 V
53 6 V
53 7 V
54 6 V
53 5 V
53 5 V
53 5 V
54 5 V
53 5 V
53 4 V
53 4 V
53 4 V
54 4 V
53 4 V
53 3 V
53 3 V
54 3 V
53 3 V
53 3 V
53 3 V
54 3 V
53 2 V
53 3 V
53 2 V
54 2 V
53 2 V
53 2 V
53 2 V
54 2 V
53 2 V
53 2 V
53 2 V
54 1 V
53 2 V
53 1 V
53 2 V
54 1 V
53 2 V
53 1 V
53 1 V
53 2 V
54 1 V
53 1 V
53 1 V
53 1 V
54 1 V
53 1 V
53 1 V
53 1 V
54 1 V
53 1 V
53 1 V
53 1 V
54 1 V
53 1 V
2.000 UP
2.000 UL
LT0
2702 3932 M
0 200 V
-31 -200 R
62 0 V
-62 200 R
62 0 V
688 -45 R
0 170 V
-31 -170 R
62 0 V
-62 170 R
62 0 V
688 -134 R
0 235 V
-31 -235 R
62 0 V
-62 235 R
62 0 V
687 -237 R
0 312 V
-31 -312 R
62 0 V
-62 312 R
62 0 V
1145 1596 M
0 88 V
-31 -88 R
62 0 V
-62 88 R
62 0 V
93 482 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
125 370 R
0 143 V
-31 -143 R
62 0 V
-62 143 R
62 0 V
149 334 R
0 135 V
-31 -135 R
62 0 V
-62 135 R
62 0 V
1116 1610 M
0 77 V
-31 -77 R
62 0 V
-62 77 R
62 0 V
-1 65 R
0 70 V
-31 -70 R
62 0 V
-62 70 R
62 0 V
73 516 R
0 35 V
-31 -35 R
62 0 V
-62 35 R
62 0 V
227 659 R
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
111 216 R
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
95 124 R
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
1207 1937 M
0 258 V
-31 -258 R
62 0 V
-62 258 R
62 0 V
1129 1142 M
0 139 V
-31 -139 R
62 0 V
-62 139 R
62 0 V
34 556 R
0 123 V
-31 -123 R
62 0 V
-62 123 R
62 0 V
44 271 R
0 150 V
-31 -150 R
62 0 V
-62 150 R
62 0 V
1121 1601 M
0 65 V
-31 -65 R
62 0 V
-62 65 R
62 0 V
65 509 R
0 61 V
-31 -61 R
62 0 V
-62 61 R
62 0 V
1093 1318 M
0 50 V
-31 -50 R
62 0 V
-62 50 R
62 0 V
21 388 R
0 50 V
-31 -50 R
62 0 V
-62 50 R
62 0 V
193 916 R
0 54 V
-31 -54 R
62 0 V
-62 54 R
62 0 V
482 780 R
0 65 V
-31 -65 R
62 0 V
-62 65 R
62 0 V
70 -62 R
0 347 V
-31 -347 R
62 0 V
-62 347 R
62 0 V
266 -213 R
0 386 V
-31 -386 R
62 0 V
-62 386 R
62 0 V
238 -324 R
0 540 V
-31 -540 R
62 0 V
-62 540 R
62 0 V
74 -430 R
0 308 V
-31 -308 R
62 0 V
-62 308 R
62 0 V
2702 4032 CircleF
3421 4172 CircleF
4140 4240 CircleF
4858 4277 CircleF
1145 1640 CircleF
1269 2210 CircleF
1425 2696 CircleF
1605 3170 CircleF
1116 1649 CircleF
1146 1787 CircleF
1250 2356 CircleF
1508 3055 CircleF
1650 3317 CircleF
1776 3487 CircleF
1207 2066 CircleF
1129 1212 CircleF
1194 1898 CircleF
1269 2306 CircleF
1121 1634 CircleF
1217 2206 CircleF
1093 1343 CircleF
1145 1781 CircleF
1369 2749 CircleF
1882 3589 CircleF
1983 3733 CircleF
2280 3886 CircleF
2549 4025 CircleF
2654 4019 CircleF
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
